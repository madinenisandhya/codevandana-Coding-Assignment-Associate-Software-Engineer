import java.util.HashMap;

public class RomanToInteger {
    public static int romanToInt(String s) {
        if (s == null || s.length() == 0) {
            return 0;
        }
        
        // Create a HashMap to store the values of Roman numerals
        HashMap<Character, Integer> romanValues = new HashMap<>();
        romanValues.put('I', 1);
        romanValues.put('V', 5);
        romanValues.put('X', 10);
        romanValues.put('L', 50);
        romanValues.put('C', 100);
        romanValues.put('D', 500);
        romanValues.put('M', 1000);
        
        int result = 0;
        
        for (int i = 0; i < s.length(); i++) {
            int currentValue = romanValues.get(s.charAt(i));
            if (i < s.length() - 1 && currentValue < romanValues.get(s.charAt(i + 1))) {
                // If the current numeral is smaller than the next, subtract it
                result -= currentValue;
            } else {
                // Otherwise, add it to the result
                result += currentValue;
            }
        }
        
        return result;
    }

    public static void main(String[] args) {
        String romanNumeral = "IX";
        int intValue = romanToInt(romanNumeral);
        System.out.println(romanNumeral + " = " + intValue);
    }
}
